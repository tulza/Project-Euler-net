using System;
using System.Linq;
using System.Collections.Generic;

namespace P8__Largest_product_in_a_series
{
    class Program
    {
        static void Main(string[] args)
        {
            //Largest product in a series (Problem 8)
            //https://projecteuler.net/problem=8

            //The four adjacent digits in the 1000-digit number that have the greatest product are 9 × 9 × 8 × 9 = 5832.
            //7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450
            //Find the thirteen adjacent digits in the 1000-digit number that have the greatest product. What is the value of this product?

            //summery
            //find the largest sum for 13 adjacent digits and mutiplies them

            //mistake that were made
            //using int instead of long for big number result in wrong calculation

            long MaxSum = 0;
            //1000 digit series
            string number = "7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450";
            List<long> numArray = new List<long>{ };
            foreach (char n in number)
            {
                numArray.Add(Convert.ToInt64(char.GetNumericValue(n)));
            }
            long Sum = 0;
            
            for (int i = 0; i < numArray.Count-13; i++)
            {
                Sum = numArray[i] * numArray[i+1] * numArray[i+2] * numArray[i+3] * numArray[i+4] * numArray[i+5] * numArray[i+6] * numArray[i+7] * numArray[i+8] * numArray[i+9] * numArray[i+10] * numArray[i+11] * numArray[i+12];
                if (MaxSum < Sum)
                {
                    MaxSum = Sum;
                }
            }
            Console.WriteLine(MaxSum);
            //result:
            //23514624000 (correct) 24/05/22

            //testing
            /*
            for (int i = 0; i < numArray.Count - 4; i++)
            {
                Sum = numArray[i] * numArray[i + 1] * numArray[i + 2] * numArray[i + 3] ;
                if (MaxSum < Sum)
                {
                    Console.WriteLine($"{numArray[i]}{numArray[i + 1]}{numArray[i + 2]}{numArray[i + 3]}");
                    Console.WriteLine(Sum+"\n");
                    MaxSum = Sum;
                }
            }*/
            //Console.WriteLine(MaxSum);
        }
    }
}
